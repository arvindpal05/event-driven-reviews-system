plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.zuzu'
version = '0.0.1-SNAPSHOT'

java {
	//toolchain {
	//	languageVersion = JavaLanguageVersion.of(17)
	//}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.kafka:spring-kafka:2.9.0'
	ext['spring-kafka.version'] = '2.9.0'

	implementation 'software.amazon.awssdk:s3:2.25.22'

    // JSON parsing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'commons-codec:commons-codec:1.16.0'
    //implementation 'software.amazon.awssdk:core:2.25.22'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
